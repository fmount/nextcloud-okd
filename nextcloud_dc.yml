apiVersion: v1
kind: Template
metadata:
  name: nextcloud
  annotations:
    description: "Nextcloud deployment"
    tags: "nextcloud"

parameters:

- name: NXCLOUD_PORT
  description: "Port of the nextcloud service"
  required: true
  value: "8080"

- name: NXCLOUD_HTTPS_PORT
  description: "Port of the nextcloud service"
  required: true
  value: "8443"

- name: NXCLOUD_REPLICA_COUNT
  description: "Replica Count of the nextcloud service"
  required: true
  value: "1"

- name: NXCLOUD_SERVICE
  description: "Service name to be used to reach nextcloud service"
  required: true
  value: "nextcloud"

- name: NXCLOUD_IMAGE
  description: "The 2ontainer to be used to deploy nextcloud"
  required: true
  value: 'docker-registry.default.svc:5000/nextcloud-dev/nextcloud-build'

- name: NXCLOUD_TAG
  description: "Nextcloud TAG image (useful to handle rolling updates)"
  required: true
  value: "latest"

- name: NXCLOUD_CONFIGMAP
  description: "Configmap containing nextcloud configuration"
  required: true
  value: nextcloud-config

- name: NXCLOUD_MODSEC
  description: "Configmap containing apache2 modsecurity configuration"
  required: true
  value: modsecurity-config

- name: NXCLOUD_CRSSEC
  description: "Configmap containing apache2 modsecurity CRS rules"
  required: true
  value: crs-config

- name: NXCLOUD_SYSLOG
  description: "Configmap containing nextcloud syslog configuration"
  required: true
  value: syslog-config

- name: HOSTNAME_SUFFIX
  description: "Suffix of the hostname used for routing traffic"
  required: true
  value: "<YOURDOMAIN>"

objects:

- apiVersion: v1
  kind: Route
  metadata:
    labels:
      app: nextcloud
      variant: green
    name: nextcloud
  spec:
    host: nextcloud${HOSTNAME_SUFFIX}
    alternateBackends:
      - name: nextcloud-green
        weight: "0"
    tls:
      insecureEdgeTerminationPolicy: Redirect
      termination: edge
    wildcardPolicy: None
    to:
      kind: Service
      name: nextcloud-blue
      weight: "100"
    wildcardPolicy: None

- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: ${NXCLOUD_SERVICE}-live
      variant: blue
    name: ${NXCLOUD_SERVICE}-blue
  spec:
    ports:
    - name: nextcloud-http-blue
      port: "${{NXCLOUD_PORT}}"
      protocol: TCP
      targetPort: "${{NXCLOUD_PORT}}"
    - name: nextcloud-https-blue
      port: "${{NXCLOUD_HTTPS_PORT}}"
      protocol: TCP
      targetPort: "${{NXCLOUD_HTTPS_PORT}}"
    selector:
      deploymentconfig: ${NXCLOUD_SERVICE}-blue
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}

- apiVersion: v1
  kind: Service
  metadata:
    name: ${NXCLOUD_SERVICE}-green
    labels:
      app: ${NXCLOUD_SERVICE}-idle
      variant: green
  spec:
    ports:
    - name: nextcloud-http-green
      port: "${{NXCLOUD_PORT}}"
      protocol: TCP
      targetPort: "${{NXCLOUD_PORT}}"
    - name: nextcloud-https-green
      port: "${{NXCLOUD_HTTPS_PORT}}"
      protocol: TCP
      targetPort: "${{NXCLOUD_HTTPS_PORT}}"
    selector:
      deploymentconfig: ${NXCLOUD_SERVICE}-green
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}

- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    name: ${NXCLOUD_SERVICE}-blue
    labels:
      app: ${NXCLOUD_SERVICE}
      variant: blue
  spec:
    selector:
      deploymentconfig: ${NXCLOUD_SERVICE}-blue
    replicas: ${NXCLOUD_REPLICA_COUNT}
    strategy:
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        labels:
          app: ${NXCLOUD_SERVICE}
          deploymentconfig: ${NXCLOUD_SERVICE}-blue
        name: ${NXCLOUD_SERVICE}-blue
      spec:
        containers:
        - env:
          - name: ETCD
            value: "http://<ETCD_ENDPOINT>
          - name: TARGET_FILE
            value: "/var/www/html/config/config.php"
          - name: ROOT_NODE
            value: "nextcloud"
          - name: ENTRY
            value: "/entrypoint.sh"
          image: ${NXCLOUD_IMAGE}:${NXCLOUD_TAG}
          imagePullPolicy: Always
          name: nextcloud
          ports:
          - containerPort: "${{NXCLOUD_PORT}}"
            protocol: TCP
          - containerPort: "${{NXCLOUD_HTTPS_PORT}}"
            protocol: TCP
          livenessProbe:
            initialDelaySeconds: 30
            tcpSocket:
              port: "${{NXCLOUD_PORT}}"
            timeoutSeconds: 20
          resources:
            limits:
              cpu: "4"
              memory: "8Gi"
            requests:
              memory: "4Gi"
              cpu: "1"
          volumeMounts:
            - name: nextcloud-data
              mountPath: /var/www/html/data
            - name: nextcloud-apache-mpm
              mountPath: /etc/apache2/mods-enabled/mpm_prefork.conf
              subPath: mpm_prefork.conf
            - name: nextcloud-locks
              mountPath: /var/lock
            - name: nextcloud-run
              mountPath: /var/run
              # Mount the configmap in /usr/share/mycloud-config and then copy the files
              # you need to modify into the $TARGET dir
              # https://github.com/kubernetes/kubernetes/issues/62099
            - name: ${NXCLOUD_CONFIGMAP}
              mountPath: /usr/share/mycloud-config
            - name: ${NXCLOUD_SYSLOG}
              mountPath: /etc/rsyslog.d
            - name: configdir
              mountPath: /var/www/html/config
            - name: swiftrc
              mountPath: /usr/share/swiftrc
              readonly: true
            - name: ${NXCLOUD_MODSEC}
              mountPath: /etc/modsecurity
            - name: ${NXCLOUD_CRSSEC}
              mountPath: /etc/modsecurity/crs
            - name: modsec-log
              mountPath: /var/log/apache2/modsecurity
          dnsPolicy: ClusterFirst
          restartPolicy: Always
        volumes:
        - name: nextcloud-data
          persistentVolumeClaim:
            claimName: nextcloud-data-volume

        - name: nextcloud-locks
          emptyDir: {}

        - name: nextcloud-run
          emptyDir: {}

        - name: configdir
          emptyDir: {}

        - name: modsec-log
          emptyDir: {}

        - name: swiftrc
          secret:
            secretName: swift-secret

        - name: ${NXCLOUD_SYSLOG}
          configMap:
            name: ${NXCLOUD_SYSLOG}
            defaultMode: 0644
            items:
              - key: "nextcloud.conf"
                path: "nextcloud.conf"
        - name: nextcloud-apache-mpm
          configMap:
            name: nextcloud-apache-mpm
            defaultMode: 0644
            items:
              - key: "mpm_prefork.conf"
                path: "mpm_prefork.conf"
        - name: ${NXCLOUD_CONFIGMAP}
          configMap:
            name: ${NXCLOUD_CONFIGMAP}
            defaultMode: 0644
            items:
              - key: "config.php"
                path: "config.php"
        - name: ${NXCLOUD_MODSEC}
          configMap:
            name: ${NXCLOUD_MODSEC}
            defaultMode: 0644
            items:
              - key: "modsecurity.conf"
                path: "modsecurity.conf"
        - name: ${NXCLOUD_CRSSEC}
          configMap:
            name: ${NXCLOUD_CRSSEC}
            defaultMode: 0644
            items:
              - key: "crs-setup.conf"
                path: "crs-setup.conf"
              - key: "REQUEST-900-EXCLUSION-RULES-BEFORE-CRS.conf"
                path: "REQUEST-900-EXCLUSION-RULES-BEFORE-CRS.conf"
              - key: "RESPONSE-999-EXCLUSION-RULES-AFTER-CRS.conf"
                path: "RESPONSE-999-EXCLUSION-RULES-AFTER-CRS.conf"
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    labels:
      app: ${NXCLOUD_SERVICE}
      variant: green
    name: ${NXCLOUD_SERVICE}-green
  spec:
    selector:
      deploymentconfig: ${NXCLOUD_SERVICE}-green
    replicas: ${NXCLOUD_REPLICA_COUNT}
    strategy:
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        labels:
          app: ${NXCLOUD_SERVICE}
          deploymentconfig: ${NXCLOUD_SERVICE}-green
        name: ${NXCLOUD_SERVICE}-green
      spec:
        containers:
        - env:
          - name: ETCD
            value: "http://<ETCD_ENDPOINT>"
          - name: TARGET_FILE
            value: "/var/www/html/config/config.php"
          - name: ROOT_NODE
            value: "nextcloud"
          - name: ENTRY
            value: "/entrypoint.sh"
          image: ${NXCLOUD_IMAGE}:${NXCLOUD_TAG}
          imagePullPolicy: Always
          name: nextcloud
          ports:
          - containerPort: "${{NXCLOUD_PORT}}"
            protocol: TCP
          - containerPort: "${{NXCLOUD_HTTPS_PORT}}"
            protocol: TCP
          livenessProbe:
            initialDelaySeconds: 30
            tcpSocket:
              port: "${{NXCLOUD_PORT}}"
            timeoutSeconds: 20
          resources:
            limits:
              cpu: "4"
              memory: "8Gi"
            requests:
              memory: "4Gi"
              cpu: "1"
          volumeMounts:
            - name: nextcloud-data
              mountPath: /var/www/html/data
            - name: nextcloud-apache-mpm
              mountPath: /etc/apache2/mods-enabled/mpm_prefork.conf
              subPath: mpm_prefork.conf
            - name: nextcloud-locks
              mountPath: /var/lock
            - name: nextcloud-run
              mountPath: /var/run
            - name: ${NXCLOUD_CONFIGMAP}
              mountPath: /usr/share/mycloud-config
            - name: ${NXCLOUD_SYSLOG}
              mountPath: /etc/rsyslog.d
            - name: configdir
              mountPath: /var/www/html/config
            - name: swiftrc
              mountPath: /usr/share/swiftrc
              readonly: true
            - name: ${NXCLOUD_MODSEC}
              mountPath: /etc/modsecurity
            - name: ${NXCLOUD_CRSSEC}
              mountPath: /etc/modsecurity/crs
            - name: modsec-log
              mountPath: /var/log/apache2/modsecurity
          dnsPolicy: ClusterFirst
          restartPolicy: Always
        volumes:
        - name: nextcloud-data
          persistentVolumeClaim:
            claimName: nextcloud-data-volume

        - name: nextcloud-locks
          emptyDir: {}

        - name: nextcloud-run
          emptyDir: {}

        - name: configdir
          emptyDir: {}

          emptyDir: {}
        - name: modsec-log

        - name: swiftrc
          secret:
            secretName: swift-secret

        - name: ${NXCLOUD_CONFIGMAP}
          configMap:
            name: ${NXCLOUD_CONFIGMAP}
            defaultMode: 0644
            items:
              - key: "config.php"
                path: "config.php"
        - name: nextcloud-apache-mpm
          configMap:
            name: nextcloud-apache-mpm
            defaultMode: 0644
            items:
              - key: "mpm_prefork.conf"
                path: "mpm_prefork.conf"
        - name: ${NXCLOUD_SYSLOG}
          configMap:
            name: ${NXCLOUD_SYSLOG}
            defaultMode: 0644
            items:
              - key: "nextcloud.conf"
                path: "nextcloud.conf"
        - name: ${NXCLOUD_MODSEC}
          configMap:
            name: ${NXCLOUD_MODSEC}
            defaultMode: 0644
            items:
              - key: "modsecurity.conf"
                path: "modsecurity.conf"
        - name: ${NXCLOUD_CRSSEC}
          configMap:
            name: ${NXCLOUD_CRSSEC}
            defaultMode: 0644
            items:
              - key: "crs-setup.conf"
                path: "crs-setup.conf"
              - key: "REQUEST-900-EXCLUSION-RULES-BEFORE-CRS.conf"
                path: "REQUEST-900-EXCLUSION-RULES-BEFORE-CRS.conf"
              - key: "RESPONSE-999-EXCLUSION-RULES-AFTER-CRS.conf"
                path: "RESPONSE-999-EXCLUSION-RULES-AFTER-CRS.conf"
